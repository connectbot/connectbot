buildscript {
    repositories {
        google()
        jcenter()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.4'
        classpath 'com.github.gfx.ribbonizer:ribbonizer-plugin:2.1.0'
        classpath 'com.dicedmelon.gradle:jacoco-android:0.1.3'
        if (rootProject.hasProperty('jacocoVersion')) {
            classpath "org.jacoco:org.jacoco.core:${rootProject.jacocoVersion}"
        }
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.20.0'
    id 'info.vividcode.android.sdk-manager' version '0.9.0'
    id 'net.ltgt.errorprone' version '0.0.14'
    id 'com.gladed.androidgitversion' version '0.4.4'
    id 'com.github.kt3k.coveralls' version '2.8.2'
}

ext {
    supportLibraryVersion = '27.1.1'
    testRunnerVersion = '1.0.2'
    espressoVersion = '3.0.2'
}

apply plugin: 'com.android.application'
apply plugin: 'com.github.gfx.ribbonizer'
apply plugin: 'jacoco-android'
apply from: '../config/quality.gradle'

repositories {
    google()
    jcenter()
    maven {
        url 'https://oss.jfrog.org/artifactory/oss-snapshot-local/'
    }
}

def isCi = "true".equals(System.getenv("CI"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

coveralls.jacocoReportPath = 'build/reports/coverage/google/debug/report.xml'

androidGitVersion {
    prefix = "v"
    codeFormat = 'MMNNPPBBB'
}

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    dexOptions {
        // Skip pre-dexing when running on a CI or when disabled via -Dpre-dex=false
        preDexLibraries = preDexEnabled && !isCi
    }

    defaultConfig {
        applicationId "org.connectbot"
        versionName androidGitVersion.name()
        versionCode androidGitVersion.code()

        minSdkVersion 14
        targetSdkVersion 27

        vectorDrawables.useSupportLibrary = true

        ndk {
            abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
        }

        testApplicationId "org.connectbot.tests"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    signingConfigs {
        if (project.hasProperty('keystorePassword')) {
            release {
                storeFile file(property('keystoreFile'))
                storePassword property('keystorePassword')
                keyAlias property('keystoreAlias')
                keyPassword property('keystorePassword')
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard.cfg'

            if (project.hasProperty('keystorePassword')) {
                //noinspection GroovyAssignabilityCheck
                signingConfig signingConfigs.release
            }

            return true // this silences Android Studio's groovy inspector
        }

        debug {
            applicationIdSuffix ".debug"
            testCoverageEnabled true
        }
    }

    flavorDimensions "license"

    productFlavors {
        // This product flavor uses the Conscrypt library which is open
        // source and licensed under Apache 2.
        oss {
            dimension "license"
            versionNameSuffix "-oss"
            ndk {
                abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
            }
        }

        // This product flavor uses the Google Play Services library for
        // ProviderInstaller. It uses Conscrypt under-the-hood, but the
        // Google Play Services SDK itself is not open source.
        google {
            dimension "license"
            versionNameSuffix ""
        }
    }

    testOptions {
        // temporarily disable the orchestrator as this breaks coverage: https://issuetracker.google.com/issues/72758547
        //execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }

    lintOptions {
        abortOnError false
        lintConfig file('lint.xml')
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'LICENSE.txt'
        exclude '**/*.gwt.xml'
    }

    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs += [
            '-Xep:ClassCanBeStatic:OFF',
            '-Xep:ClassNewInstance:OFF',
            '-Xep:DefaultCharset:OFF',
            '-Xep:SynchronizeOnNonFinalField:OFF',
            '-XepExcludedPaths:' +
                    '.*/app/src/main/java/de/mud/.*|' +
                    '.*/app/src/main/java/org/apache/.*|' +
                    '.*/app/src/main/java/org/keyczar/.*',
    ]
}

// Dependencies must be below the android block to allow productFlavor specific deps.
dependencies {
    implementation 'org.connectbot:sshlib:2.2.7'
    googleImplementation 'com.google.android.gms:play-services-base:15.0.1'
    ossImplementation 'org.conscrypt:conscrypt-android:1.1.3'

    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.takisoft.fix:preference-v7:$supportLibraryVersion.1"
    implementation "com.android.support:design:$supportLibraryVersion"

    androidTestUtil "com.android.support.test:orchestrator:$testRunnerVersion"

    androidTestImplementation "com.android.support.test:runner:$testRunnerVersion"
    androidTestImplementation "com.android.support.test:rules:$testRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$espressoVersion"

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.19.0'
    testImplementation 'org.assertj:assertj-core:3.10.0'
    testImplementation 'org.robolectric:robolectric:3.6.1'
}


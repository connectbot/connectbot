/*
 * ConnectBot: simple, powerful, open-source SSH client for Android
 * Copyright 2015 Kenny Root, Jeffrey Sharkey
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "com.jetbrains.python.envs" version "0.0.30"
}

envs {
    bootstrapDirectory = new File(buildDir, "bootstrap")
    conda "miniconda", "Miniconda3-4.7.12.1"
}

def condaDir = "${buildDir}/bootstrap/miniconda"
def appDir = '../app/'
def localeDir = file(appDir + 'locale')
def launchpadImportFile = 'launchpad-import.tar.gz'
def launchpadExportFile = rootProject.file('launchpad-export.tar.gz')

def android2poUrl = 'git+https://github.com/miracle2k/android2po.git#egg=android2po'
def android2poExec = "${condaDir}/bin/a2po"
def android2poArgs = [
    '--groups',
    'strings',
    '--android',
    file(appDir + 'src/main/res'),
    '--gettext',
    localeDir,
    '--template',
    'fortune/fortune.pot',
    '--layout',
    'fortune/%(locale)s.po'
]

task installAndroid2Po(type: Exec) {
    dependsOn 'build_envs'
    executable "${condaDir}/bin/pip"
    args 'install', android2poUrl
}

task untarTranslations(type: Copy) {
    from tarTree(resources.gzip(launchpadExportFile))
    into localeDir

    // Unsupported Android locales
    exclude '**/oc.po', '**/ca@valencia.po'
}

task importToAndroid(type: Exec) {
    group = "Translations"
    description = "Import translations into ConnectBot from app/locale directory."

    dependsOn 'installAndroid2Po'

    executable = android2poExec
    args = ['import']+ android2poArgs

    logging.captureStandardOutput LogLevel.LIFECYCLE
    logging.captureStandardError  LogLevel.ERROR
}

task translationsImport {
    group = "Translations"
    description = "Import translations from a Launchpad export tarball."

    dependsOn 'untarTranslations', 'importToAndroid'
}

task exportFromAndroid(type: Exec) {
    dependsOn 'installAndroid2Po'

    executable = android2poExec
    args = ['export']+ android2poArgs

    logging.captureStandardOutput LogLevel.LIFECYCLE
    logging.captureStandardError  LogLevel.ERROR
}

task translationsExport(type: Tar) {
    group = "Translations"
    description = "Export translations from ConnectBot in a format suitable to import into Launchpad"

    dependsOn 'exportFromAndroid'
    destinationDir = file("$rootDir")
    archiveFileName = launchpadImportFile
    from localeDir
    compression = Compression.GZIP
    doLast {
        println()
        println('Import file into Launchpad:')
        println(archiveFile.get().asFile)
        println()
    }
}
